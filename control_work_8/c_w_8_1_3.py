"""
Создать класс “Time” для работы со временем в формате Час:Минута:Секунда.
Класс должен содержать:
- динамические свойства: количество часов, минут, секунд;
- статическое свойство: часовой пояс (строка в формате “UTC+/-число”);
- классовые методы: редактировать часовой пояс;
- статические методы: проверка корректности заданных величин (часов, минут, секунд),
  перевод заданного значения из формата Час:Минута:Секунда в секунды и наоборот;
- конструктор: вызывает конструктор родительского класса
  и выводит сообщение о создании нового момента времени;
- инициализатор: проверяет корректность переданных величин,
  определяет динамические свойства класса и выводит на экран информацию об объекте;
- деструктор: выводит сообщение о том, что момент времени удален;
- методы: вычисление разницы между двумя моментами времени в секундах,
  сложение с заданным количеством секунд, вычитание заданного количества секунд,
  сравнение двух моментов времени, вывод на экран;

Продемонстрировать работу класса и всех его методов.
"""

class Time:

    # Статическое свойство
    time_zone = "UTC +/-{}".format(0)  # часовой пояс


    # Переопределение конструктора
    def __new__(cls, *args, **kwargs):
        print("Создан новый момент времени в виде объекта Time!")
        return super().__new__(cls)

    # Определение динамических свойств класса через инициализатор
    def __init__(self, h, m, s):
        """
        Инициализатор класса “Time”
        :param h: количество часов
        :param m: количество минут
        :param s: количество секунд
        """
        self.h = h
        self.m = m
        self.s = s

        if not self.check_data(self.h, self.m, self.s):
            print(f"Свойства объекта класса Time: '{self.h:02}:{self.m:02}:{self.s:02}' заданы некорректно!")

        else:
            print(f"Объект класса Time: '{self.h:02}:{self.m:02}:{self.s:02}'")

    # Переопределение деструктора
    def __del__(self):
        print("Момент времени '{:02}:{:02}:{:02}' был удалён!".format(self.h, self.m, self.s))


    # Добавление классового метода
    @classmethod
    def change_time_zone(cls, some_h):
        """
        Метод для редактирования часового пояса
        :param some_h: Количество часов
        :return: None
        """
        if some_h > 0:
            cls.time_zone = f"UTC +{some_h}"
        elif some_h < 0:
            cls.time_zone = f"UTC {some_h}"
        else:
            return

    # Добавление статических методов
    @staticmethod
    def check_data(h, m, s):
        """
        Метод для проверки корректности заданных величин (часов, минут, секунд)
        :param h: Количество часов
        :param m: Количество минут
        :param s: Количество секунд
        :return: True или False
        """
        if h < 0 or h > 23:
            print("Неправильно задано количество часов!")
            print("Задайте количество часов в диапазоне от 0 до 23...")
            return False

        elif m < 0 or m > 59:
            print("Неправильно задано количество минут!")
            print("Задайте количество минут в диапазоне от 0 до 59...")
            return False

        elif s < 0 or s > 59:
            print("Неправильно задано количество секунд!")
            print("Задайте количество секунд в диапазоне от 0 до 59...")
            return False

        return True


t1 = Time(23, 0, 0)
print(t1.time_zone)

Time.change_time_zone(5)
print(t1.time_zone)
